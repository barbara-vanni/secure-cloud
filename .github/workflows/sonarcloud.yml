name: SonarCloud C++ Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            cmake g++ \
            libjsoncpp-dev \
            libssl-dev \
            libpq-dev \
            libcurl4-openssl-dev \
            libsqlite3-dev \
            uuid-dev \
            zlib1g-dev

      # Téléchargement de la bonne version du build-wrapper
      - name: Download Build Wrapper
        run: |
          mkdir -p build-wrapper
          curl -L -o build-wrapper/build-wrapper-linux-x86.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -o build-wrapper/build-wrapper-linux-x86.zip -d build-wrapper/
          chmod +x build-wrapper/build-wrapper-linux-x86/build-wrapper-linux-x86-64

      # Étape principale : compilation de tous les microservices avec le build-wrapper
      - name: Build all microservices with Build Wrapper
        run: |
          set -e
          mkdir -p bw-output
          BUILD_WRAPPER=./build-wrapper/build-wrapper-linux-x86/build-wrapper-linux-x86-64

          for service in auth-service files-service messaging-service audit-service; do
            echo "=== Building $service ==="
            rm -rf $service/build
            mkdir -p $service/build
            cd $service/build

            cmake -DCMAKE_BUILD_TYPE=Debug \
                  -DCMAKE_CXX_FLAGS="--coverage" \
                  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
          
            # Compilation avec build-wrapper
            $BUILD_WRAPPER --out-dir ../../bw-output/$service make -j$(nproc)

            cd ../..
          done

          # Fusion des fichiers compile_commands.json
          echo "[" > bw-output/compile_commands.json
          first=true
          for service in auth-service files-service messaging-service audit-service; do
            f="$service/build/compile_commands.json"
            if [ -s "$f" ]; then
              if [ "$first" = true ]; then
                first=false
              else
                echo "," >> bw-output/compile_commands.json
              fi
              sed '1d;$d' "$f" >> bw-output/compile_commands.json
            fi
          done
          echo "]" >> bw-output/compile_commands.json

      # Lancement de l'analyse SonarCloud
      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=drvba_secure-cloud
            -Dsonar.organization=drvba
            -Dsonar.cfamily.compile-commands=bw-output/compile_commands.json
